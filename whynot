

local function Align(Handle, Where, Pos, Rot)
	Handle:BreakJoints()
	Handle.CFrame = Where.CFrame *Pos *Rot
end

task.spawn(function()
	while task.wait() do
		Align(game.Players.LocalPlayer.Character["MARTILLO"].Handle, game.Players.LocalPlayer.Character["HumanoidRootPart"], CFrame.new(3.50, 2., -7.30), CFrame.Angles(74.70, -.60, -2.30))
	end
end)
 
game.Players.LocalPlayer.Character["MARTILLO"].Handle.SpecialMesh:Destroy()



local function Align(Handle, Where, Pos, Rot)
	Handle:BreakJoints()
	Handle.CFrame = Where.CFrame *Pos *Rot
end

task.spawn(function()
	while task.wait() do
		Align(game.Players.LocalPlayer.Character["MeshPartAccessory"].Handle, game.Players.LocalPlayer.Character["Torso"], CFrame.new(0, 2, 1.25), CFrame.Angles(114.50, 0, -0))
	end
end)

--https://www.roblox.com/catalog/5136154487/DG-40-Archangel-Sniper-Rifle-Black
 for i,v in next, game:GetService("Players").LocalPlayer.Character:GetDescendants() do

if v:IsA("BasePart") and v.Name ~="HumanoidRootPart" then 

game:GetService("RunService").Heartbeat:connect(function()

v.Velocity = Vector3.new(0,35,0)

wait(0.5)

end)

end

end



game:GetService("StarterGui"):SetCore("SendNotification", { 

	Title = "Notification";

	Text = "Netless activated";

	Icon = "rbxthumb://type=Asset&id=5107182114&w=150&h=150"})

Duration = 16;

 local player = game.Players.LocalPlayer
local char = player.Character
local Align = function(Part0, Part1,Mesh)
    local Aligns = {
        AlignOrientation = Instance.new("AlignOrientation", Part0),
        AlignPosition = Instance.new("AlignPosition", Part0)
    }
    
    local Attachments = {
        Attach0 = Instance.new("Attachment", Part0),
        Attach1 = Instance.new("Attachment", Part1)
    }
    local m = Part0:FindFirstChildOfClass('SpecialMesh')--This will get the first "SpecialMesh" it finds if it does not find any, then it will return nil
    if Mesh and m then --If Mesh is set to true and it finds a mesh it will destroy it
        m:Destroy()
    end
    Part0:BreakJoints()
    Aligns.AlignOrientation.Attachment0 = Attachments.Attach0
    Aligns.AlignOrientation.Attachment1 = Attachments.Attach1
    Aligns.AlignOrientation.Responsiveness = math.huge
    Aligns.AlignOrientation.RigidityEnabled = true
    
    Aligns.AlignPosition.Attachment0 = Attachments.Attach0
    Aligns.AlignPosition.Attachment1 = Attachments.Attach1
    Aligns.AlignPosition.Responsiveness = math.huge
    Aligns.AlignPosition.RigidityEnabled = true
        Aligns.AlignPosition.MaxForce = 999999999
        spawn(function()
            while _G.loop do 
                local mag = (Part0.Position - (Part1.CFrame*Attachments.Attach0.CFrame:Inverse()).p).magnitude--magnitude can get the distance between two cframe or position
                if mag >= 5 then 
                Part0.CFrame = Part1.CFrame*Attachments.Attach0.CFrame:Inverse()
                end
                Part0.Velocity = Vector3.new(0,35,0)
                game['Run Service'].Heartbeat:wait()
                end
        end)
 return {Attachments.Attach0, Attachments, Aligns}
        
end 
local hat = Align(char['Nebula Blade'].Handle,char['Torso'],false)
local cf = char['Torso'].CFrame*CFrame.new(0,0,1.0)*CFrame.Angles(math.rad(92),math.rad(-0),90)
hat[1].CFrame = cf:Inverse() * char['Torso'].CFrame

 
local function Align(Handle, Where, Pos, Rot)
	Handle:BreakJoints()
	Handle.CFrame = Where.CFrame *Pos *Rot
end

task.spawn(function()
	while task.wait() do          ---                                                                              .CFrame*CFrame.new(0,-2,-0.50)*CFrame.Angles(math.rad(-105),math.rad(-90),175.25)
		Align(game.Players.LocalPlayer.Character["AJBackAccessory"].Handle, game.Players.LocalPlayer.Character["Right Arm"], CFrame.new(0,- 2, -0.50), CFrame.Angles(-105, -89.50, -85))
	end
end)
